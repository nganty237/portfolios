class SplitText {
    constructor(element, options = {}) {
      this.element = document.querySelector(element);
      this.type = options.type || "chars"; // 'chars', 'words', or 'lines'
      this.originalHTML = this.element.innerHTML;
  
      this.split();
    }
  
    split() {
      const content = this.element.innerHTML;
      this.element.innerHTML = ""; // Clear existing content
  
      // Split content based on the type
      if (this.type === "chars") {
        this.splitIntoChars(content);
      } else if (this.type === "words") {
        this.splitIntoWords(content);
      } else if (this.type === "lines") {
        this.splitIntoLines(content);
      }
    }
    splitIntoChars(content) {
      const chars = [...content]; // Spread into characters
      chars.forEach((char) => {
        const span = document.createElement("span");
        span.className = "char";
        span.textContent = char === " " ? "\u00A0" : char; // Preserve spaces
        this.element.appendChild(span);
      });
    }
  
    splitIntoWords(content) {
      const words = content.split(" "); // Split into words
      words.forEach((word, index) => {
        const span = document.createElement("span");
        span.className = "word";
        span.textContent = word;
        this.element.appendChild(span);
  
        // Add a space after the word unless it's the last word
        if (index < words.length - 1) {
          const space = document.createElement("span");
          space.className = "space";
          space.textContent = "\u00A0"; // Non-breaking space
          this.element.appendChild(space);
        }
      });
    }
  
    splitIntoLines(content) {
      // Preserve words but wrap them line by line
      const words = content.split(" ");
      const tempDiv = document.createElement("div");
      tempDiv.style.position = "absolute";
      tempDiv.style.visibility = "hidden";
      tempDiv.style.width = `${this.element.offsetWidth}px`;
      tempDiv.style.whiteSpace = "normal";
  
      words.forEach((word, index) => {
        const span = document.createElement("span");
        span.className = "word";
        span.textContent = word + (index < words.length - 1 ? " " : "");
        tempDiv.appendChild(span);
      });
  
      document.body.appendChild(tempDiv);
      const lines = tempDiv.innerHTML.split(/(?<=<\/span>)\s+/);
      tempDiv.remove();
  
      lines.forEach((line) => {
        const div = document.createElement("div");
        div.className = "line";
        div.innerHTML = line;
        this.element.appendChild(div);
      });
    }
  
    revert() {
      this.element.innerHTML = this.originalHTML; // Restore the original HTML
    }
  }
 
// const letters = document.querySelectorAll('.letter');
// const tl=gsap.timeline()
// tl.to(
//   letters,
//   { y: -1, 
//     opacity: 0.5 , 
//     yoyo:true,
//     repeat:1 
//     },
// )
// tl.to(
//   letters,
//   {
//     scale: 1.5, 
//     duration: .3, 
//     stagger: 0.2,
//     ease: "bounce.out",
//      yoyo:true ,
//      repeat:1 
//     } 
// );
const section3=document.querySelectorAll('.skills')
const df=gsap.timeline()
df.to(section3,{
  rotateX:30,
  opacity:0.5,
  y:-10,
  duration:3,
  yoyo:true,
  repeat:1
},)
df.to(section3,{
  rotateY:30,
  duration:3,
  opacity:1,
  // ease:"bounce.out",
  yoyo:true,
  repeat:1
},)

const section4=document.querySelectorAll(".contact")
const ng=gsap.to(".contact",{scrollTrigger:".contact",
  opacity:0,
  rotationX:100,
  rotationY:50,
  // rotateY:20,
  duration:1.5,
  yoyo:true,
  repeat:1
})


const preloader=document.getElementById('preloader')
const logo=document.querySelectorAll('.logo')
const tl=gsap.timeline()
tl.to(logo,{
    duration:2,
    yoyo:true,
    repeat:1
},)
tl.to(preloader,{
    opacity:0,
    duration:2,
    onComplete:()=>{
        preloader.style.display='none';
        content.classList.remove('hidden');
        gsap.from(content,{
          y:-100,
          opacity:1,
          duration:2.5
        })
    }
})


const letters = document.querySelectorAll('.letter') ;
const tf=gsap.timeline()
tf.to(
  letters,
  { y: -1, 
    opacity: 0.5 , 
    yoyo:true,
    repeat:1 
    },
)
tf.to(
  letters,
  {
    scale: 1.5, 
    duration: .3, 
    stagger: 0.2,
    ease: "bounce.out",
     yoyo:true ,
     repeat:1 
    } 
);
const title=document.querySelector('first')


const links = document.querySelectorAll('a');
function pageTransition(event) {
    event.preventDefault(); 
    const targetUrl = event.currentTarget.href; 
    gsap.to(document.body, {
        opacity: 0,
        duration: 1,
        onComplete: () => {
            window.location.href = targetUrl;
        }
    });
}
links.forEach(lien => {
    lien.addEventListener('click', pageTransition);
});
    gsap.from(document.body, {
        opacity: 0,
        duration: 1
    });
